security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        # dev:
        #     pattern: ^/(_(profiler|wdt)|css|images|js)/
        #     security: false

        api_login:
            pattern: ^/api/login/token
            stateless: true
            json_login:
                check_path: api_login_token
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api_doc:
            pattern:   ^/api/doc
            stateless: true

        api:
            pattern:   ^/api
            stateless: true
            jwt: ~
            access_denied_handler: App\Security\AccessDeniedHandler

        # admin:
        #     pattern:   ^/admin
        #     security: false

        # main:
        #     lazy: true
        #     security: false

    access_control:
        - { path: ^/api/login/token, roles: PUBLIC_ACCESS }
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
